x = x + geom_line()
x = x + labs(x = "Interval (Time of Day)", y = "Steps / 5 Minute Interval" )
print(x)
x
x = ggplot(daycast, aes(x = intervalct, y = steps))
x = x + geom_line()
print(x)
x = x + labs(x = "Interval (Time of Day)", y = "Steps / 5 Minute Interval" )
print(x)
x = x + scale_x_date(labels = date_format(format = "%h%m"))
print(x)
x = x + scale_x_date(labels = date_format("%h%m"))
print(x)
daycast$intervalct <- as.numeric(daycast$intervalct -trunc(daycast$intervalct, "days"))
head(daycast$intervalct)
daycast$intervalct <- parse_date_time (daycast$interval, "HM")
library("stringr")
library("lubridate")
library("reshape2")
library("ggplot2")
library("scale")
library("scales")
daycast$intervalct <- parse_date_time (daycast$interval, "HM")
head(daycast$intervalct)
daycast$intervalct <- as.numeric(daycast$intervalct -trunc(daycast$intervalct, "days"))
qplot(intervalct, steps, data = daycast, facets = dayo~., geom = "line",
xlab = "Interval (Time of Day)", ylab = "Steps / 5 Minute Interval",
main = "Plot 4: Mean Steps per Interval on Weekdays & Weekends",
scale_x_datetime(format = "%S:00"))
qplot(intervalct, steps, data = daycast, facets = dayo~., geom = "line",
xlab = "Interval (Time of Day)", ylab = "Steps / 5 Minute Interval",
main = "Plot 4: Mean Steps per Interval on Weekdays & Weekends",
scale_x_datetime(format = "%H:00"))
qplot(intervalct, steps, data = daycast, facets = dayo~., geom = "line",
xlab = "Interval (Time of Day)", ylab = "Steps / 5 Minute Interval",
main = "Plot 4: Mean Steps per Interval on Weekdays & Weekends",
scale_x_datetime(format = "%H:%M"))
daycast$intervalct <- parse_date_time (daycast$interval, "HM")
qplot(intervalct, steps, data = daycast, facets = dayo~., geom = "line",
xlab = "Interval (Time of Day)", ylab = "Steps / 5 Minute Interval",
main = "Plot 4: Mean Steps per Interval on Weekdays & Weekends",
scale_x_datetime(format = "%H:%M"))
daycast$intervalct <- as.numeric(daycast$intervalct
- trunc(daycast$intervalct, "date"))
daycast$intervalct <- daycast$intervalct
- trunc(daycast$intervalct, "days")
daycast$intervalct <- trunc(daycast$intervalct, c("hours","mins"))
daycast$intervalct <- trunc(daycast$intervalct, "hours", "mins")
head(daycast$intervalct)
daycast$intervalct <- daycast$intervalct - trunc(daycast$intervalct, "hours", "mins")
head(daycast$intervalct)
daycast$intervalct <- parse_date_time (daycast$interval, "HM")
daycast$intervalct <- daycast$intervalct - trunc(daycast$intervalct,"days")
head(daycast$intervalct)
daycast$intervalct[1:10]
daycast$intervalct[1]
daycast$intervalct <- parse_date_time (daycast$interval, "HM")
daycast$intervalct <- daycast$intervalct - trunc(daycast$interval,"days")
daycast$intervalct <- daycast$intervalct - trunc(daycast$intervalct,"days")
str(daycast$intervalct)
daycast$intervalct <- as.Date(daycast$intervalct
- trunc(daycast$interval,"days"))
daycast$intervalct <- as.Date(daycast$intervalct
- trunc(daycast$intervalct,"days"))
daycast$intervalct <- parse_date_time (daycast$interval, "HM")
str(daycast$intervalct)
qplot(intervalct, steps, data = daycast, facets = dayo~., geom = "line",
xlab = "Interval (Time of Day)", ylab = "Steps / 5 Minute Interval",
main = "Plot 4: Mean Steps per Interval on Weekdays & Weekends",
scale_x_datetime(format = "H:M"))
qplot(intervalct, steps, data = daycast, facets = dayo~., geom = "line",
xlab = "Interval (Time of Day)", ylab = "Steps / 5 Minute Interval",
main = "Plot 4: Mean Steps per Interval on Weekdays & Weekends",
scale_x_datetime(format = "HH:MM"))
daycast$intervalct <- daycast$intervalct - as.Date("01-01-00")
as.Date("01/01/00")
as.Date(0)
str(daycast$intervalct)
str(daycast$intervalct[250])
daycast$intervalct[250] -1
60*60*24
daycast$intervalct[250] -86400
as.numeric(daycast$intervalct[1])
daycast$intervalct[1] + 62167219200
daycast$intervalct[25}
daycast$intervalct[25]
format(daycast$intervalct, format = "%H:%M")
daycast$intervalct <- format(daycast$intervalct, format = "%H:%M")
str(daycast$intervalct)
qplot(intervalct, steps, data = daycast, facets = dayo~., geom = "line",
xlab = "Interval (Time of Day)", ylab = "Steps / 5 Minute Interval",
main = "Plot 4: Mean Steps per Interval on Weekdays & Weekends",
scale_x_datetime(format = "H:M"))
qplot(as.Date(intervalct), steps, data = daycast, facets = dayo~., geom = "line",
xlab = "Interval (Time of Day)", ylab = "Steps / 5 Minute Interval",
main = "Plot 4: Mean Steps per Interval on Weekdays & Weekends")
qplot(intervalct, steps, data = daycast, facets = dayo~., geom = "line",
xlab = "Interval (Time of Day)", ylab = "Steps / 5 Minute Interval",
main = "Plot 4: Mean Steps per Interval on Weekdays & Weekends")
daycast$intervalct <- parse_date_time (daycast$interval, "HM")
rownames(daycast) <- format(daycast$intervalct, format = "%H:%M")
daycast$intervalct <- parse_date_time (daycast$interval, "HM")
daycast$intlabel <- format(daycast$intervalct, format = "%H:%M")
daycast$intervalct <- parse_date_time (daycast$interval, "HM")
daycast$intervalct <- parse_date_time (daycast$interval, "HM",
format = time_format)
daycast$intlabel <- format(daycast$intervalct, format = time_format)
daycast$intervalct <- parse_date_time (daycast$interval, "HM")
qplot(intervalct, steps, data = daycast, facets = dayo~., geom = "line",
xlab = "Interval (Time of Day)", ylab = "Steps / 5 Minute Interval",
main = "Plot 4: Mean Steps per Interval on Weekdays & Weekends",
scale_x_datetime(labels = date_format("%M:%S")))
qplot(interval, steps, data = daycast, facets = dayo~., geom = "line",
xlab = "Interval (Time of Day)", ylab = "Steps / 5 Minute Interval",
main = "Plot 4: Mean Steps per Interval on Weekdays & Weekends",
scale_x_datetime(labels = date_format("%M:%S")))
qplot(intervalct, steps, data = daycast, facets = dayo~., geom = "line",
xlab = "Interval (Time of Day)", ylab = "Steps / 5 Minute Interval",
main = "Plot 4: Mean Steps per Interval on Weekdays & Weekends",
scale_x_datetime(labels = time_format("%M:%S")))
qplot(intervalct, steps, data = daycast, facets = dayo~., geom = "line",
xlab = "Interval (Time of Day)", ylab = "Steps / 5 Minute Interval",
main = "Plot 4: Mean Steps per Interval on Weekdays & Weekends",
scale_x_datetime(labels = time_format("%H:%M")))
qplot(intervalct, steps, data = daycast, facets = dayo~., geom = "line",
xlab = "Interval (Time of Day)", ylab = "Steps / 5 Minute Interval",
main = "Plot 4: Mean Steps per Interval on Weekdays & Weekends",
scale_x(labels = time_format("%H:%M")))
qplot(intervalct, steps, data = daycast, facets = dayo~., geom = "line",
xlab = "Interval (Time of Day)", ylab = "Steps / 5 Minute Interval",
main = "Plot 4: Mean Steps per Interval on Weekdays & Weekends",
scale_x_datetime(labels = time_format))
scale_x_datetime(labels = time_format))
scale_x_datetime(labels = time_format)
qplot(intervalct, steps, data = daycast, facets = dayo~., geom = "line",
xlab = "Interval (Time of Day)", ylab = "Steps / 5 Minute Interval",
main = "Plot 4: Mean Steps per Interval on Weekdays & Weekends",
scale_x_datetime(labels = time_format("%H:%M")))
x = ggplot(daycast, aes(x = intervalct, y = steps))
x = x + geom_line()
x = x + labs(x = "Interval (Time of Day)", y = "Steps / 5 Minute Interval" )
x = x + scale_x_datetime(labels = time_format("%H%M"))
rm(x)
x = ggplot(daycast, aes(x = intervalct, y = steps))
x = x + geom_line()
x = x + labs(x = "Interval (Time of Day)", y = "Steps / 5 Minute Interval" )
x = x + scale_x_datetime(labels = date_format("%H%M"))
print(x)
rm(x)
x = ggplot(daycast, aes(x = intervalct, y = steps))
x = x + geom_line() + facets = dayo~.
x = x + geom_line() + facets(dayo~.)
x = ggplot(daycast, aes(x = intervalct, y = steps, facets = dayo~.))
x = x + geom_line()
x = x + labs(x = "Interval (Time of Day)", y = "Steps / 5 Minute Interval" )
x = x + scale_x_datetime(labels = date_format("%H%M"))
x = ggplot(daycast, aes(x = intervalct, y = steps, dayo~.))
x = x + geom_line()
x = x + labs(x = "Interval (Time of Day)", y = "Steps / 5 Minute Interval" )
x = x + scale_x_datetime(labels = date_format("%H%M"))
daycast$hour <- parse_date_time (daycast$interval, "HM")
qplot(hour, steps, data = daycast, facets = dayo~., geom = "line",
xlab = "Interval (Time of Day)", ylab = "Steps / 5 Minute Interval",
main = "Plot 4: Mean Steps per Interval on Weekdays & Weekends")
daycast$hour <- daycast$interval
qplot(hour, steps, data = daycast, facets = dayo~., geom = "line",
xlab = "Interval (Time of Day)", ylab = "Steps / 5 Minute Interval",
main = "Plot 4: Mean Steps per Interval on Weekdays & Weekends")
daycast$intervalct <- parse_date_time (daycast$interval, "HM")
qplot(intervalct, steps, data = daycast, facets = dayo~., geom = "line",
xlab = "Interval (Time of Day)", ylab = "Steps / 5 Minute Interval",
main = "Plot 4: Mean Steps per Interval on Weekdays & Weekends",
scale_x_date(labels = time_format("%H:%M")))
##              scale_x_datetime(format = "H:M"))
xlabelstr <- c("00:00","06:00", "12:00","18:00", "00:00")
qplot(intervalct, steps, data = daycast, facets = dayo~., geom = "line",
xlab = "Interval (Time of Day)", ylab = "Steps / 5 Minute Interval",
main = "Plot 4: Mean Steps per Interval on Weekdays & Weekends",
scale_x_datetime(labels = xlabelstr))
x = ggplot(daycast, aes(x = intervalct, y = steps))
x = x + geom_line() + facet_wrap(dayo~.)
x = x + labs(x = "Interval (Time of Day)", y = "Steps / 5 Minute Interval" )
x = x + scale_x_datetime(labels = date_format("%H%M"))
print(x)
x = ggplot(daycast, aes(x = intervalct, y = steps))
x = x + geom_line() + facet_grid(dayo~.)
x = x + labs(x = "Interval (Time of Day)", y = "Steps / 5 Minute Interval" )
x = x + scale_x_datetime(labels = date_format("%H%M"))
print(x)
rm(x)
x = ggplot(daycast, aes(x = intervalct, y = steps))
x = x + geom_line() + facet_grid(dayo~.)
x = x + labs(x = "Interval (Time of Day)", y = "Steps / 5 Minute Interval" )
x = x + scale_x_datetime(labels = date_format("%H:%M"))
print(x)
x = ggplot(daycast, aes(x = intervalct, y = steps))
x = x + geom_line() + facet_grid(dayo~.)
x = x + labs(x = "Interval (Time of Day)", y = "Steps / 5 Minute Interval" )
x = x + ggtitle("Plot 4: Mean Steps per Interval on Weekdays & Weekends")
x = x + scale_x_datetime(labels = date_format("%H:%M"))
print(x)
x = ggplot(daycast, aes(x = intervalct, y = steps))
x = x + geom_line() + facet_grid(dayo~.)
x = x + labs(x = "5 Minute Interval (by Time of Day)",
y = "Steps per 5 Minute Interval" )
x = x + ggtitle("Plot 4: Mean Steps per Interval on Weekdays & Weekends")
x = x + scale_x_datetime(labels = date_format("%H:%M"))
print(x)
x = ggplot(daycast, aes(x = intervalct, y = steps))
x = x + geom_line() + facet_grid(dayo~.)
x = x + labs(x = "Interval by Time of Day",
y = "Steps per 5 Minute Interval" )
x = x + ggtitle("Plot 4: Mean Steps per Interval on Weekdays & Weekends")
x = x + scale_x_datetime(labels = date_format("%H:%M"))
print(x)
x = ggplot(daycast, aes(x = intervalct, y = steps))
x = x + geom_line() + facet_grid(dayo~.)
x = x + labs(x = "Interval by Time of Day",
y = "Steps per 5 Minute Interval" )
x = x + ggtitle("Plot 4: Mean Steps per Interval on Weekdays vs. Weekends")
x = x + scale_x_datetime(labels = date_format("%H:%M"))
print(x)
x = ggplot(daycast, aes(x = intervalct, y = steps))
x = x + geom_line() + facet_grid(dayo~.)
x = x + labs(x = "Time of Day",
y = "Steps per 5 Minute Interval" )
x = x + ggtitle("Plot 4: Mean Steps per Interval on Weekdays vs. Weekends")
x = x + scale_x_datetime(labels = date_format("%H:%M"))
print(x)
head(daycast$intervalct)
maxcast <- dcast(daymelt, dayo + interval ~ variable,
fun.aggregate = max, "")  ## needed dummy arg
maxcast$steps <- as.numeric(maxcast$steps) ## dcast made it "character"
## add a column with POSIXct interval for X axis and then plot.
maxcast$intervalct <- parse_date_time (maxcast$interval, "HM")
x = ggplot(maxcast, aes(x = intervalct, y = steps))
x = x + geom_line() + facet_grid(dayo~.)
x = x + labs(x = "Time of Day",
y = "Steps per 5 Minute Interval" )
x = x + ggtitle("Plot 5: Maximum Steps per Interval on Weekdays vs. Weekends")
x = x + scale_x_datetime(labels = date_format("%H:%M"))
print(x)
As a result, there are only **`r 61-8`** observations for each interval.
detach("package:ggplot2", unload=TRUE)
detach("package:lubridate", unload=TRUE)
detach("package:reshape2", unload=TRUE)
detach("package:scales", unload=TRUE)
detach("package:stringr", unload=TRUE)
codes scraps for pasting into the markdown pre-knitting
# download and unzip dataset
if(!file.exists("activity.zip")) {
fileurl = "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(fileurl, destfile="activity.zip")
unzip("activity.zip")
}
require("stringr")
require("lubridate")
require("reshape2")
# read the data into a data frame, initial column classes, date conversion
activityraw <- read.csv("activity.csv",
colClasses = rep("character",3))
#  initial check data quality, frequency of NAs
sum(is.na(activityraw$steps)) # 2304 NA values
mean(is.na(activityraw$steps)) # 0.1311475 NAs/total
sum(!complete.cases(activityraw))  # 2304 NA rows
## note: there is a format issue with the 5 minute interval string
## is is mm, hmm, and hhmm format without colons.
## do I need to worry about it.  Examine all questions
## to see if it matters.
##  pad the interval string to 4 characters with leading zeros and
##  add a column that combines date and interval values to a POSIXct variable
activityraw$interval <- str_pad(activityraw$interval, width = 4, pad = "0")
activityraw$iposixct <- paste(activityraw$date, activityraw$interval)
activityraw$iposixct <- parse_date_time(activityraw$iposixct, "ymd HM")
activityraw$steps <- as.numeric(activityraw$steps)
activityraw$date <- as.Date (activityraw$date)
activity <- activityraw[complete.cases(activityraw),]  ## rm NAs
#### using reshape2 package to prepare for histograms
actmelt <- melt(activity, id.vars = "date", measure.vars= "steps" )
actcast <- dcast(actmelt, date ~ variable, fun.aggregate = sum,
na.rm = TRUE)
hist(actcast$steps, main = "Plot 1: Frequency of Daily Total Steps",
xlab = "Steps per day", breaks = 40, col = "gray",
ylab= "Frequency (days in 61 day period)")
mean(actcast$steps)
median(actcast$steps)
####    doing the dailies. Hee hee!
stepmelt <- melt(activity, id.vars = c("date", "interval"),
measure.vars= "steps" )
stepcast <- dcast(stepmelt, interval ~ variable, fun.aggregate = mean,
na.rm = TRUE)
###     determine the maximum average interval
stepmax <- stepcast[(max(stepcast$steps)==stepcast$steps),]
###     preare for plotting and plot
stepcast$intervalct <- parse_date_time (stepcast$interval, "HM")
plot(x = stepcast$intervalct, y = stepcast$steps, type="l",
ylab = "Steps per Interval",
xlab = "Time of Day (61 days in sample)",
main = "Mean Steps per Five Minute Interval"
)
##   bad data replacement
sum(!complete.cases(activityraw)); mean(is.na(activityraw$steps))
actbad <- activityraw[!complete.cases(activityraw),]
datelist <- unique(activity$date)
set.seed(42)
randlist <- datelist[round(runif(n = nrow(actbad), min = 0.5,
max = (length(datelist + 0.5))))]
##  check randomization
summary(randlist)
intervalist <- actbad[,"interval"]
for(i in seq_along(randlist)) {
actbad[i, 1] <- activity[(randlist[i]==activity$date) &
(intervalist[i] == activity$interval),"steps"]
}
## combine data
newact <- rbind(activity, actbad)
newact <- newact[order(newact$date, newact$interval),]
## prep histogram
newmelt <- melt(newact, id.vars = "date", measure.vars= "steps" )
newcast <- dcast(newmelt, date ~ variable, fun.aggregate = sum,
na.rm = TRUE)
hist(newcast$steps, main = "Plot 3: Daily Total Steps after NAs Replaced",
xlab = "Steps per day", breaks = 40, col = "gray",
ylab= "Frequency (days in 61 day period)")
mean(newcast$steps)
median(newcast$steps)
100*(mean(newcast$steps)- mean(actcast$steps))/mean(actcast$steps)
100*(median(newcast$steps)- median(actcast$steps))/median(actcast$steps)
#### factor for weekends and weekdays
weeker <- c("weekend", rep("weekday",5), "weekend")
newact$dayo <- as.factor(weeker[wday(newact$date)])
## Prepare the panel plot per Question 2 in this section
## recast the data by 5 min. interval, then calculate mean for each interval
daymelt <- melt(newact, id.vars = c("dayo", "interval"),
measure.vars= "steps")
daycast <- dcast(daymelt, dayo + interval ~ variable,
fun.aggregate = mean)
daycast$hour <- parse_date_time (daycast$interval, "HM")
qplot(intervalct, steps, data = daycast, facets = dayo~., geom = "line",
xlab = "Interval (Time of Day)", ylab = "Steps / 5 Minute Interval",
main = "Plot 4: Mean Steps per Interval on Weekdays & Weekends")
x = ggplot(daycast, aes(x = intervalct, y = steps))
x = x + geom_line() + facet_grid(dayo~.)
x = x + labs(x = "Time of Day",
y = "Steps per 5 Minute Interval" )
x = x + ggtitle("Plot 4: Mean Steps per Interval on Weekdays vs. Weekends")
x = x + scale_x_datetime(labels = date_format("%H:%M"))
print(x)
## xlabelstr <- c("00:00","06:00", "12:00","18:00", "00:00")
##              scale_x_datetime(labels = xlabelstr))
##              scale_x_datetime(format = "H:M"))
meancast <- dcast(actmelt, date ~ variable, fun.aggregate = mean,
na.rm = TRUE)
mediancast <- dcast(actmelt, date ~ variable, fun.aggregate = median,
na.rm = TRUE)
head(meancast)
names(meancast) <- c("Date", "Mean")
names(mediancast) <- c("Date", "Median")
daily.mean.median <- cbind(meancast, medianscast$Median)
daily.mean.median <- cbind(meancast, mediancast$Median)
daily.mean.median
meancast <- dcast(actmelt, date ~ variable, fun.aggregate = mean,
na.rm = TRUE)
mediancast <- dcast(actmelt, date ~ variable, fun.aggregate = median,
na.rm = TRUE)
summary(mediancast)
summary(mediancast$steps)
summary(meancast$steps)
summary(meancast$steps)
meancast$steps
mean(newcast$steps) ; median(newcast$steps)
round(100*(mean(newcast$steps)- mean(actcast$steps))/mean(actcast$steps)
round(100*(median(newcast$steps)- median(actcast$steps))/median(actcast$steps)
sum(newact$steps) ; sum(activity$steps)
round(100*(mean(newcast$steps)- mean(actcast$steps))/mean(actcast$steps)
round(100*(median(newcast$steps)- median(actcast$steps))/median(actcast$steps)
sum(newact$steps) ; sum(activity$steps)
round(100*(mean(newcast$steps)- mean(actcast$steps))/mean(actcast$steps)
round(100*(median(newcast$steps)- median(actcast$steps))/median(actcast$steps)
sum(newact$steps) ; sum(activity$steps)
round(100*(mean(newcast$steps)- mean(actcast$steps))/mean(actcast$steps)
round(100*(mean(newcast$steps)- mean(actcast$steps))/mean(actcast$steps))
mean(newcast$steps) ; median(newcast$steps)
(mean(newcast$steps) - mean(actcast$steps))/mean(actcast$steps)
(median(newcast$steps) - median(actcast$steps))/median(actcast$steps)
sum(newact$steps) ; sum(activity$steps)
compcast <- cbind(newcast, c(rep("Imputed", 61)))
head(compcast)
head(actcast)
compcast <- rbind(cbind(actcast), c(rep("Original")))
compcast <- rbind(cbind(actcast), c(rep("Original"), 53))
compcast <- rbind(cbind(actcast), c(rep("Original", 53)))
compcast <- rbind(compcast, cbind((actcast), c(rep("Original", 53)))
)
head(cbind(actcast, c(rep("Original", 53))))
compcast <- cbind(newcast, c(rep("Imputed", 61)), deparse.level = 0)
head(compcast)
compcast <- cbind(newcast, c(rep("Imputed", 61)), deparse.level = 1)
head(compcast)
compcast <- rbind(compcast,
cbind(actcast, c(rep("Original", 53)), deparse.level = 1)
)
rm(compcast)
compcastn <- cbind(newcast, c(rep("Imputed", 61)))
names(compcastn) <- c("Date", "Steps", "Type")
compcasta <- cbind(actcast, c(rep("Original", 53)))
names(compcasta) <- c("Date", "Steps", "Type")
compcasta <- rbind(compcasta, compcastn)
head(compcasta)
compcasta$Type <- as.factor(compcasta$Type)
str(compcasta)
library("ggplot2", lib.loc="C:/Users/JR/Documents/R/win-library/3.1")
x = ggplot(comcasta, aes(y = steps))
x = x + geom_bar() + facet_grid(Type~.)
x = x + labs(x = "Time of Day",
y = "Frequency (total steps per day" )
x = x + ggtitle("Plot B: Total Steps Per Day ~ Original vs. Imputed")
x = ggplot(comcasta, aes(y = steps))
x = ggplot(compcasta, aes(y = steps))
x = ggplot(compcasta, aes(y = steps))
x = x + geom_bar() + facet_grid(Type~.)
x = x + labs(x = "Time of Day",
y = "Frequency (total steps per day" )
x = x + ggtitle("Plot B: Total Steps Per Day ~ Original vs. Imputed")
print(x)
x = ggplot(compcasta, aes(y = Steps))
x = x + geom_bar() + facet_grid(Type~.)
x = x + labs(x = "Time of Day",
y = "Frequency (total steps per day" )
x = x + ggtitle("Plot B: Total Steps Per Day ~ Original vs. Imputed")
print(x)
x = ggplot(compcasta, aes(x = Steps))
x = x + geom_bar() + facet_grid(Type~.)
x = x + labs(x = "Time of Day",
y = "Frequency (total steps per day" )
x = x + ggtitle("Plot B: Total Steps Per Day ~ Original vs. Imputed")
print(x)
x = ggplot(compcasta, aes(x = Steps))
x = x + geom_bar() + facet_grid(Type~.)
x = x + labs(y = "Frequency (total steps per day" )
x = x + ggtitle("Plot B: Total Steps Per Day ~ Original vs. Imputed")
print(x)
x = ggplot(compcasta, aes(x = Steps, col = "gray10"))
x = x + geom_bar() + facet_grid(Type~.)
x = x + labs(y = "Frequency (total steps per day" )
x = x + ggtitle("Plot B: Total Steps Per Day ~ Original vs. Imputed")
print(x)
x = ggplot(compcasta, aes(x = Steps, col = "gray"))
x = x + geom_bar() + facet_grid(Type~.)
x = x + labs(y = "Frequency (total steps per day" )
x = x + ggtitle("Plot B: Total Steps Per Day ~ Original vs. Imputed")
print(x)
x = ggplot(compcasta, aes(x = Steps))
x = x + geom_bar() + facet_grid(Type~.)
x = x + labs(y = "Frequency (total steps per day" )
x = x + ggtitle("Plot B: Total Steps Per Day ~ Original vs. Imputed")
x = ggplot(compcasta, aes(x = Steps))
x = x + geom_bar() + facet_grid(Type~.)
x = x + labs(y = "Frequency (total steps per day" )
x = x + ggtitle("Plot B: Total Steps Per Day ~ Original vs. Imputed")
max(newcast$steps)
x = ggplot(compcasta, aes(x = Steps))
x = x + geom_bar() + facet_grid(Type~.)
x = x + labs(y = "Frequency (total steps per day" )
x = x + ggtitle("Plot B: Total Steps Per Day ~ Original vs. Imputed")
print(x)
x = ggplot(compcasta, aes(x = Steps))
x = x + geom_bar() + color(Type~.)
x = x + labs(y = "Frequency (total steps per day" )
x = x + ggtitle("Plot B: Total Steps Per Day ~ Original vs. Imputed")
print(x)
x = ggplot(compcasta, aes(x = Steps))
x = x + geom_bar() + col(Type~.)
x = x + labs(y = "Frequency (total steps per day" )
x = x + ggtitle("Plot B: Total Steps Per Day ~ Original vs. Imputed")
print(x)
x = ggplot(compcasta, aes(x = Steps))
x = x + geom_bar() + facet_grid(Type~.)
x = x + labs(y = "Frequency (total steps per day" )
x = x + ggtitle("Plot B: Total Steps Per Day ~ Original vs. Imputed")
print(x)
x = ggplot(compcasta, aes(x = Steps, col=Type))
x = x + geom_bar()
x = x + labs(y = "Frequency (total steps per day" )
x = x + ggtitle("Plot B: Total Steps Per Day ~ Original vs. Imputed")
print(x)
x = ggplot(compcasta, aes(x = Steps, col=Type))
x = x + geom_bar() + position_dodge()
x = x + labs(y = "Frequency (total steps per day" )
x = x + ggtitle("Plot B: Total Steps Per Day ~ Original vs. Imputed")
print(x)
x = ggplot(compcasta, aes(x = Steps, col=Type))
x = x + geom_bar(position="dodge")
x = x + labs(y = "Frequency (total steps per day" )
x = x + ggtitle("Plot B: Total Steps Per Day ~ Original vs. Imputed")
print(x)
x = ggplot(compcasta, aes(x = Steps, col=Type))
x = x + geom_bar(position="dodge", binwidth=range/10)
x = x + labs(y = "Frequency (total steps per day" )
x = x + ggtitle("Plot B: Total Steps Per Day ~ Original vs. Imputed")
print(x)
x = ggplot(compcasta, aes(x = Steps, col=Type))
x = x + geom_bar(position="dodge", binwidth=2000)
x = x + labs(y = "Frequency (total steps per day" )
x = x + ggtitle("Plot B: Total Steps Per Day ~ Original vs. Imputed")
print(x)
x = ggplot(compcasta, aes(x = Steps, col=Type))
x = x + geom_bar(position="dodge", binwidth=4000)
x = x + labs(y = "Frequency (total steps per day" )
x = x + ggtitle("Plot B: Total Steps Per Day ~ Original vs. Imputed")
print(x)
rm(x)
